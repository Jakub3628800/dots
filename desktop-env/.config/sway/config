#sway config file

# TODO: add a way to detect the primary and secondary displays

#
# VARIABLES
#
# set primary and secondary displays


#output HDMI1-A-1 pos 0 0 res 1920x1080
#utput eDP1 pos -1920 0 res 1920x1080
output HDMI-A-1 {
    resolution 3840x2160
    scale 2
    position 0,0
    adaptive_sync on
}
#output DP-3 {
#    resolution 3840x2160
#    scale 2
#}

output eDP-1 {
    resolution 1920x1080
    scale 1
    position -1920,0
}

#set $laptop <laptop_output_identifier>
#bindswitch --reload --locked lid:on output $laptop disable
#bindswitch --reload --locked lid:off output $laptop enable

# suspend on lid closed
bindswitch --reload --locked lid:on exec "systemctl suspend"


set $primary "eDP-1"
set $secondary "HDMI-A-1"


# set mod variable
set $mod Mod4

# set default apps
set $browser "google-chrome"
set $terminal "wezterm"


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod


# KEYBINDINGS
# ____________________________________________________________________________

# Start a terminal
bindsym $mod+Return exec $terminal

# kill focused window
bindsym $mod+c kill

# bemenu can be installed with nix - adjust path so that it can be found
set $extended_path "PATH=$PATH:$HOME/.nix-profile/bin:/nix/var/nix/profiles/default/bin:$HOME/.local/bin"

bindsym $mod+d exec env $extended_path bemenu-run -l 10 -W 0.7 --fn "monospace 14"
# start bookmark dmenu
bindsym $mod+o exec wtype "$(grep -v "^#" ~/.local/share/snippets/bookmarks | env $extended_path bemenu -i -l 10 -W 0.7 --fn "monospace 14")"
# start passwords dmenu
bindsym $mod+p exec wtype "$(grep -v "^#" ~/.local/share/snippets/passwords | env $extended_path bemenu -i -l 10 -W 0.7 --fn "monospace 14" | xargs --no-run-if-empty -n 2 pass)"

# commands not used now
#bindsym $mod+n exec wtype $(eval "$(grep -v "^#" ~/.local/share/snippets/cmds | bemenu -i -l 50 )")

# Record for as long as the key is pressed
bindsym --no-repeat Mod4+u exec env $extended_path bash /home/jk/repos/gists/s2t/record.sh
bindsym --release Mod4+u exec touch /home/jk/tmp/stop_recording

# Start a browser
bindsym $mod+f exec $browser



# Reload the configuration file
bindsym $mod+Shift+c reload

# Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your wayland session.' -B 'Yes, exit i3' 'i3-msg exit'"



# Change focus
bindsym $mod+h focus left
bindsym $mod+Left focus left

bindsym $mod+j focus down
bindsym $mod+Down focus down

bindsym $mod+k focus up
bindsym $mod+Up focus up

bindsym $mod+l focus right
bindsym $mod+Right focus right


# Move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+Left move left

bindsym $mod+Shift+j move down
bindsym $mod+Shift+Down move down

bindsym $mod+Shift+k move up
bindsym $mod+Shift+Up move up

bindsym $mod+Shift+l move right

bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Shift+i split h

# split in vertical orientation
bindsym $mod+Shift+v split v

# enter fullscreen mode for the focused container
bindsym $mod+Shift+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"


# Configure default workspace monitor placement
workspace 1 output $secondary
workspace 2 output $secondary
workspace 3 output $secondary
workspace 4 output $secondary

workspace 5 output $primary
workspace 6 output $primary
workspace 7 output $primary

# Configure default placement of apps
assign [class="Code"] number 1
assign [class="Brave"] number 2
assign [class="chrome"] number 2
assign [class="Chromium"] number 2
assign [class="Slack"] number 3
#assign [class="obsidian"] number 3
assign [class="Spotify"] number 6

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

## move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window's width.
        # Pressing right will grow the window's width.
        # Pressing up will shrink the window's height.
        # Pressing down will grow the window's height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Include local configuration if it exists
include ~/.config/sway/config.local

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command i3status
    position top
    workspace_buttons yes
    swaybar_command swaybar
}

# or input <identifier>
input "type:keyboard" {
    xkb_layout "us,cz(qwerty)"
    xkb_options "grp:alt_shift_toggle,altwin:hyper_win,caps:escape"
}


exec {
  dbus-update-activation-environment --systemd --all
  dbus-update-activation-environment --systemd XDG_CURRENT_DESKTOP=sway
  systemctl --user start kanshi.service
  systemctl --user start gammastep.service
  swaymsg 'workspace 1; exec wezterm start -- bash -c "cd ~/repos; zsh"'
  swaymsg 'workspace 2; exec google-chrome'
  swaymsg 'workspace 3; exec wezterm start -- bash -c "cd ~/repos/dots; zsh"'
  swaymsg 'workspace 4; exec wezterm start'
  swaymsg 'workspace 5; exec wezterm start'

}

exec_always {
  slack
  mako
}
