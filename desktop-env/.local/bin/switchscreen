#!/bin/bash

# switchscreen - Simple script to switch between kanshi display profiles

KANSHI_CONFIG="$HOME/.config/kanshi/config"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

show_help() {
    echo "Usage: switchscreen [OPTION]"
    echo "Switch between display profiles defined in kanshi config"
    echo ""
    echo "Options:"
    echo "  -h, --help     Show this help message"
    echo "  -l, --list     List available profiles"
    echo "  -d, --default  Restore kanshi auto-detection"
    echo ""
    echo "If no option is provided, interactive menu will be shown."
}

list_profiles() {
    echo -e "${GREEN}Available profiles in kanshi config:${NC}"
    grep '^profile' "$KANSHI_CONFIG" | sed 's/profile "\(.*\)" {/  \1/' | nl -v0
    echo -e "  ${YELLOW}default${NC} - Restore kanshi auto-detection"
}

restore_kanshi() {
    echo -e "${GREEN}Restarting kanshi service to restore auto-detection...${NC}"
    systemctl --user restart kanshi.service
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}✓ Kanshi restarted successfully${NC}"
    else
        echo -e "${RED}✗ Failed to restart kanshi${NC}"
        exit 1
    fi
}

apply_profile() {
    local profile_name="$1"

    # Save current workspace
    local current_workspace
    current_workspace=$(swaymsg -t get_workspaces | jq -r '.[] | select(.focused==true) | .name')

    case "$profile_name" in
        "docked")
            echo -e "${GREEN}Applying docked profile (extended displays)...${NC}"
            swaymsg output eDP-1 enable
            swaymsg output eDP-1 mode 1920x1200@60.001Hz position 0 0 scale 1
            swaymsg output HDMI-A-1 enable
            swaymsg output HDMI-A-1 mode 3840x2160@60.000Hz position 1920 0 scale 2
            ;;
        "laptop")
            echo -e "${GREEN}Applying laptop profile (internal display only)...${NC}"
            swaymsg output eDP-1 enable
            swaymsg output eDP-1 mode 1920x1200@60.001Hz position 0 0 scale 1
            swaymsg output HDMI-A-1 disable
            ;;
        "hdmi-primary")
            echo -e "${GREEN}Applying HDMI-primary profile...${NC}"
            swaymsg output HDMI-A-1 enable
            swaymsg output HDMI-A-1 mode 3840x2160@60.000Hz position 0 0 scale 2
            swaymsg output eDP-1 enable
            swaymsg output eDP-1 mode 1920x1200@60.001Hz position 1920 0 scale 1
            ;;
        "mirror")
            echo -e "${GREEN}Applying mirror profile (duplicated displays)...${NC}"
            swaymsg output HDMI-A-1 enable
            swaymsg output HDMI-A-1 mode 1920x1080@60.000Hz position 0 0 scale 1
            swaymsg output eDP-1 enable
            swaymsg output eDP-1 mode 1920x1200@60.001Hz position 0 0 scale 1
            ;;
        "default")
            restore_kanshi
            return
            ;;
        *)
            echo -e "${RED}Unknown profile: $profile_name${NC}"
            exit 1
            ;;
    esac

    # Restore focus to the original workspace
    if [ -n "$current_workspace" ]; then
        swaymsg workspace "$current_workspace"
    fi

    echo -e "${GREEN}✓ Profile '$profile_name' applied successfully${NC}"
}

interactive_menu() {
    echo -e "${GREEN}Select a display profile:${NC}"
    echo ""

    # Extract profile names from kanshi config
    local profiles
    mapfile -t profiles < <(grep '^profile' "$KANSHI_CONFIG" | sed 's/profile "\(.*\)" {/\1/')
    profiles+=("default")

    # Display menu
    for i in "${!profiles[@]}"; do
        case "${profiles[$i]}" in
            "docked") desc=" - Extended displays (laptop + external)" ;;
            "laptop") desc=" - Internal display only" ;;
            "hdmi-primary") desc=" - HDMI as primary display" ;;
            "mirror") desc=" - Mirrored displays" ;;
            "default") desc=" - Restore kanshi auto-detection" ;;
            *) desc="" ;;
        esac
        echo -e "  $((i+1)). ${profiles[$i]}${desc}"
    done
    echo ""

    read -p "Enter choice (1-${#profiles[@]}): " choice

    # Validate input
    if [[ ! "$choice" =~ ^[0-9]+$ ]] || [ "$choice" -lt 1 ] || [ "$choice" -gt ${#profiles[@]} ]; then
        echo -e "${RED}Invalid choice. Please enter a number between 1 and ${#profiles[@]}.${NC}"
        exit 1
    fi

    selected_profile="${profiles[$((choice-1))]}"
    apply_profile "$selected_profile"
}

# Check if kanshi config exists
if [ ! -f "$KANSHI_CONFIG" ]; then
    echo -e "${RED}Error: Kanshi config not found at $KANSHI_CONFIG${NC}"
    exit 1
fi

# Parse command line arguments
case "${1:-}" in
    -h|--help)
        show_help
        ;;
    -l|--list)
        list_profiles
        ;;
    -d|--default)
        restore_kanshi
        ;;
    "")
        interactive_menu
        ;;
    docked|laptop|hdmi-primary|mirror|default)
        apply_profile "$1"
        ;;
    *)
        echo -e "${RED}Unknown option: $1${NC}"
        echo "Use -h or --help for usage information."
        exit 1
        ;;
esac
